<?xml version="1.0" encoding="UTF-8"?>
<!-- Ref EDD template: v1.0 - NO
BORRAR -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.entel.cl/EDD/Dictionary/v1" targetNamespace="http://www.entel.cl/EDD/Dictionary/v1" elementFormDefault="qualified" version="1.0">
	<annotation>
		<documentation>Simple and Basic data Structures, intented to be used across all the Inventory.</documentation>
	</annotation>	
	<complexType name="SimpleIndexDetail_Type">
		<annotation>
			<documentation>
				It allows the correlation between two things, with a simple framework of modules and subModules. Althought both attributes, 
				module and subModule, are not correlative to any pre-defined structure or taxonomy, it is assumed that the  subModule 
				represents a component/attribute/member of the module. The subModule should not be sent if the module is ommitted. 
				The module can be set without a subModule.
            </documentation>
		</annotation>
		<attribute name="module" type="tns:genericStringValue_SType" use="required"/>
		<attribute name="subModule" type="tns:genericStringValue_SType"/>
	</complexType>
        <complexType name="SimpleEventPlaceHolderDetail_Type">
		<annotation>
			<documentation>
				Minimum detail to be able to identify the place and time of a particular event.
            </documentation>
		</annotation>
		<attribute name="time" type="tns:messageTimeStamp_SType" use="required"/>
		<attribute name="place" type="tns:genericStringValue_SType" use="required"/>
	</complexType>
	<complexType name="StringDataMap_Type">
		<annotation>
			<documentation>
                Data Structure representing a map-like tree, on which a single value is assosiated with a single key for each item. 
                
                The value is always of undertermined String type.
            </documentation>
		</annotation>
		<sequence>
			<element name="Item" type="tns:StringDataMapItem_Type" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<complexType name="StringDataMapItem_Type">
		<annotation>
			<documentation>
                Data Structure representing a map-like tree item, on which a single value is assosiated with a single key.
                
                The value is always of undertermined String type.
            </documentation>
		</annotation>
		<attribute name="key" type="tns:genericStringValue_SType" use="required"/>
		<attribute name="value" type="tns:genericStringValue_SType" use="required"/>
	</complexType>
	<complexType name="GenericDataMap_Type">
		<annotation>
			<documentation>
                Data Structure representing a map-like tree, on which a single value is assosiated with a single key for each item. 
                
                The value is of undetermined type.
            </documentation>
		</annotation>
		<sequence>
			<element name="Item" type="tns:GenericDataMapItem_Type" maxOccurs="unbounded"/>
		</sequence>
	</complexType>
	<complexType name="GenericDataMapItem_Type">
		<annotation>
			<documentation>
                Data Structure representing a map-like tree item, on which a single value is assosiated with a single key. 
                
                The value is of undetermined type.
            </documentation>
		</annotation>
		<sequence>
			<element name="Value" type="anyType"/>
		</sequence>
		<attribute name="key" type="tns:genericStringValue_SType"/>
	</complexType>
	<simpleType name="messageTimeStamp_SType">
            <annotation>
              <documentation>
                Used for identifing a single timestamp of a particular message instance.
              </documentation>
            </annotation>
            <restriction base="dateTime">
                <pattern value="[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-6][0-9].*[0-9]*[0-9]*[0-9]*(Z|((\+|-)([0-1][0-2]|[0-0][0-9]):[0-5][0-9]))"/>
            </restriction>
	</simpleType>
	<simpleType name="sysCode_SType">
		<annotation>
			<documentation>
                Used for univoquely identifing a System, Legacy, Application, etc..
            </documentation>
		</annotation>
		<restriction base="string"/>
	</simpleType>
	<simpleType name="countryCode_SType">
		<annotation>
			<documentation>
                 Used for univoquely identifing a country.
            </documentation>
		</annotation>
		<restriction base="string">
			<length value="3"/>
		</restriction>
	</simpleType>
	<simpleType name="alphaCode_SType">
		<annotation>
			<documentation>
                Alphanumeric code represented by a 3 characters string.
            </documentation>
		</annotation>
		<restriction base="string">
			<length value="3"/>
		</restriction>
	</simpleType>
	<simpleType name="sysName_SType">
		<annotation>
			<documentation>
                Used for univoquely describing a instance of a System, Legacy, Application, etc.
            </documentation>
		</annotation>
		<restriction base="string">
			<length value="10"/>
		</restriction>
	</simpleType>
	<simpleType name="genericStringValue_SType">
		<annotation>
			<documentation>
                Simple type used for values on which its representation is an undertermined string chain.
            </documentation>
		</annotation>
		<restriction base="string"/>
	</simpleType>
	<simpleType name="age_SType">
		<annotation>
			<documentation>
                It depicts the age of a person or object.
            </documentation>
		</annotation>
		<restriction base="int"/>
	</simpleType>
	<simpleType name="id_SType">
		<annotation>
			<documentation>
                Simple type used for unique identifiers.&#xA;This is represented in the integer base, and could apply the necessary restrictions given its representation.
            </documentation>
		</annotation>
		<restriction base="int"/>
	</simpleType>
	<simpleType name="status_SType">
		<restriction base="string">
			<enumeration value="OK"/>
			<enumeration value="ERROR"/>
		</restriction>
	</simpleType>
	<simpleType name="timeout_SType">
		<annotation>
			<documentation>Generic Timeout values, made out of int values</documentation>
		</annotation>
		<restriction base="int">
			<!-- Define future restrictions here. -->
		</restriction>
	</simpleType>
	<complexType name="Credentials_Type">
		<annotation>
			<documentation>Security related information, that allows a Consumer to access a certain service operation.</documentation>
		</annotation>
		<attribute name="user" type="string">
			<annotation>
				<documentation>The username being used for executing this service. Its mainly used for Security Constraints Validations.</documentation>
			</annotation>
		</attribute>
		<attribute name="password" type="string">
			<annotation>
				<documentation>The password being used for executing this service. Its mainly used for Security Constraints Validations.</documentation>
			</annotation>
		</attribute>
	</complexType>
        <complexType name="CacheKey_Type">
          <annotation>
            <documentation>Key used to store cached values.</documentation>
          </annotation>
          <attribute name="source" type="string">
            <annotation>
              <documentation>
                Component name to which the cached value
                is related.
              </documentation>
            </annotation>
          </attribute>
          <attribute name="category" type="string">
            <annotation>
              <documentation>
                Operation that belongs to the component,
                which is also related to the cached value.
              </documentation>
            </annotation>
          </attribute>
          <attribute name="instance" type="string">
            <annotation>
              <documentation>
                Instance, containing the information
                used to execute the operation related to
                the cached value.
              </documentation>
            </annotation>
          </attribute>
        </complexType>
        
        <complexType name="TimePeriod">
		<annotation>
			<documentation>A base / value business entity used to represent a
				period of time, between two timepoints</documentation>
		</annotation>
		<sequence>
			<element name="endDateTime" type="dateTime" minOccurs="1"
				maxOccurs="1">
				<annotation>
					<documentation>An instant of time, ending at the TimePeriod:
					</documentation>
					<documentation>Notes:</documentation>
					<documentation>If null, then represents to the end of time
					</documentation>
				</annotation>
			</element>
			<element name="startDateTime" type="dateTime" minOccurs="1"
				maxOccurs="1">
				<annotation>
					<documentation>An instant of time, starting at the TimePeriod
					</documentation>
					<documentation>Notes:</documentation>
					<documentation>If null, then represents to the beginning of time
					</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="Money">
		<annotation>
			<documentation>A base / value business entity used to represent money</documentation>
		</annotation>
		<sequence>
			<element name="amount" type="float" minOccurs="1" maxOccurs="1">
				<annotation>
					<documentation>A positive floating point number.</documentation>
				</annotation>
			</element>
			<element name="units" type="string" minOccurs="1" maxOccurs="1">
				<annotation>
					<documentation>Currency(Notes:refer to [ISO 4217]) or non-currency terms, such as loyalty points.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
</schema>